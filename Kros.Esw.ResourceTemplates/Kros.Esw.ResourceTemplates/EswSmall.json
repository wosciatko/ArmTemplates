{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "stage": {
            "type": "string"
        },
        "slot": {
            "type": "string"
        },
        "sqlAdminName": {
            "type": "string"
        },
        "sqlAdminPassword": {
            "type": "securestring"
        },
        "aspnetEnvironment": {
            "type": "string"
        },
        "slotAspnetEnvironment": {
            "type": "string"
        },
        "servicePlanSku": {
            "type": "string",
            "allowedValues": [
                "S1",
                "S2",
                "S3",
                "P1v2",
                "P2v2",
                "P3v2",
                "PC2",
                "PC3",
                "PC4",
                "I1",
                "I2",
                "I3"
            ]
        }
    },
    "variables": {
        "baseTemplateUri": "https://raw.githubusercontent.com/wosciatko/ArmTemplates/master/Kros.Esw.ResourceTemplates/Kros.Esw.ResourceTemplates/Resources/",
        "serviceApiUri": "[concat(variables('baseTemplateUri'), 'ServiceApi.json')]",
        "servicePlanUri": "[concat(variables('baseTemplateUri'), 'ServicePlan.json')]",
        "sqlServerUri": "[concat(variables('baseTemplateUri'), 'SqlServer.json')]",
        "sqlDatabaseUri": "[concat(variables('baseTemplateUri'), 'SqlDatabase.json')]",
        "azureSearchUri": "[concat(variables('baseTemplateUri'), 'AzureSearch.json')]",
        "storageAccountUri": "[concat(variables('baseTemplateUri'), 'StorageAccount.json')]",
        "serviceBusUri": "[concat(variables('baseTemplateUri'), 'ServiceBus.json')]",
        "functionAppUri": "[concat(variables('baseTemplateUri'), 'FunctionApp.json') ]",
        "cdnUri": "[concat(variables('baseTemplateUri'), 'Cdn.json') ]",
        "appInsightsUri": "[concat(variables('baseTemplateUri'), 'ApplicationInsights.json') ]",


        "servicePlanName": "[concat('esw-', parameters('stage'), '-asp')]",
        "sqlServerName": "[concat('esw-', parameters('stage'), '-sql')]",
        "azureSearchName": "[concat('esw-', parameters('stage'), '-search')]",
        "storageAccountName": "[concat('esw', parameters('stage'), 'storage')]",
        "azureServiceBusName": "[concat('esw-', parameters('stage'), '-asb')]",
        "cdnProfileName": "[concat('esw-', parameters('stage'), '-cdnprofile')]",
        "appInsightsName": "[concat('esw-', parameters('stage'), '-ain')]",
        "monitoringWebName": "[concat('esw-', parameters('stage'), '-monitoring-web')]",

        "servicesToCreate": [
            "authorization",
            "companies",
            "defaults",
            "gateway",
            "invoicing",
            "partners",
            "recalculate",
            "reporting",
            "search"
        ],
        "databasesToCreate": [
            "authorization",
            "companies",
            "invoicing",
            "partners"
        ],

        "functionAppToCreate": [
            "companies-search",
            "search",
            "sync"
        ],

        "cdnEndpoints": [
            {
                "name": "[concat('esw-', parameters('stage'),'-temp-cdn')]",
                "originPath": "/invocing/production",
                "domainName": "fakturacia-kros-wtf",
                "domainHost": "fakturacia.kros.wtf"
            },
            {
                "name": "[concat('esw-', parameters('stage'), '-', parameters('slot'), '-cdn')]",
                "originPath": "/invocing/staging",
                "domainName": "staging-fakturacia-kros-wtf",
                "domainHost": "staging.fakturacia.kros.wtf"
            }
        ],

        "apiSlotName": "[parameters('slot')]"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2018-11-01",
            "name": "[variables('servicePlanName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('servicePlanUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "servicePlanName": { "value": "[variables('servicePlanName')]" },
                    "servicePlanSku": { "value": "[parameters('servicePlanSku')]" }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2018-11-01",
            "name": "[concat('esw-', parameters('stage'), '-', variables('servicesToCreate')[copyIndex()], '-api')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('serviceApiUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "apiName": { "value": "[concat('esw-', parameters('stage'), '-', variables('servicesToCreate')[copyIndex()], '-api')]" },
                    "slotName": { "value": "[variables('apiSlotName')]" },
                    "servicePlanId": { "value": "[resourceId('Microsoft.Web/serverfarms', variables('servicePlanName'))]" },
                    "appInsightsInstrumentationKey": { "value": "[reference(variables('appInsightsName')).outputs.instrumentationKey.value]" },
                    "aspnetEnvironment": { "value": "[parameters('aspnetEnvironment')]" },
                    "slotAspnetEnvironment": { "value": "[parameters('slotAspnetEnvironment')]" }
                }
            },
            "copy": {
                "name": "serviceApiCopy",
                "count": "[length(variables('servicesToCreate'))]"
            },
            "dependsOn": [
                "[variables('servicePlanName')]",
                "[variables('appInsightsName')]"
            ]
        }
    ],
    "outputs": {}
}
